// 1. Write a functional expression that duplicates each element of a given array.
// Input: [2, 4, 7, 11, -2, 1]
// Output: [2, 2, 4, 4, 7, 7, 11, 11, -2, -2, 1, 1]

var repeatelem = function(elem, n){
    // returns an array with element elem repeated n times.
    var arr = [];

    for (var i = 0; i <= n; i++) {
        arr = arr.concat(elem);
    };

    return arr;
};
var result = repeatelem([2, 4, 7, 11, -2, 1],1)
console.log(result);

// 2. Write a functional expression that removes all duplicates in a given array.
// Input: [8, 13, 8, 9, 12, 8, 1, 1, 4, 13]
// Output: [1, 4, 8, 9, 12, 13]


var array  = [8, 13, 8, 9, 12, 8, 1, 1, 4, 13];
 var removeDuplicates = [... new Set(array)];
 console.log(removeDuplicates);
 var sorted = removeDuplicates.sort();
 console.log(sorted);

 var a = [8, 13, 8, 9, 12, 8, 1, 1, 4, 13];
var removeDuplicates = a.filter((c,index) => {
    return a.indexOf(c) === index;
});
console.log(removeDuplicates);


// 3.
// a. Write a function that checks if a given array has odd number of elements.
// Input: [1, 2, 9, 2, 1]
// Output: true

var a = [1, 2, 9, 2, 1];
console.log(a.length); //5

if((a.length) %2 !== 0){
    console.log(true);
} else {
    console.log(false);
}

// b. Write a function that counts the number of elements less than the middle
// element. If the given array has an even number of elements, print out an error
// message.
// Input: [-1, 8.1, 3, 6, 2.3, 44, 2.11]
// Output: 4

var niz = [-1, 8.1, 3, 6, 2.3, 44, 2.11];
// console.log(niz.length); //vrati 7 - toliko ima clana
// console.log(niz.length-1);  //6

function elLessThanMiddle (array){
    var counter;
    var middle;
   
    for(i=0; i<array.length; i++){
        if(array.length !== 0){
            middle = Math.floor(array.length/2);
        var middleValue = array[middle];
        }
        else{
            console.log('Error message');
        }
    }

    counter = 0;
    for(i=0; i<array.length; i++){
        if(array[i] < middleValue){
            counter++;
        }
    }
    return counter;
}

console.log(elLessThanMiddle(niz));  // 4 vrednosti manje od srednjeg elementa koji je broj 6

// 4. Write a function that finds the smallest element of a given array. The function should
// return an object that contains the smallest value and its last position in the array.
// Input: [1, 4, -2, 11, 8, 1, -2, 3]
// Output: { minValue: -2, minLastIndex: 6 }

function findSmallest (array){
    var smallest = array[0];
    var indexOfsmallest;
    var object = {};
    for(i=0; i<array.length; i++){
        if(array[i] < smallest){
            smallest = array[i];
            indexOfsmallest = array.lastIndexOf(smallest);
            object = {smallest, indexOfsmallest}
        }
    }
    return object;
}
console.log(findSmallest([1, 4, -2, 11, 8, 1, -2, 3]));

// II nacin

function smallestEl (arr) {
    var obj = {};
    var minValue = Math.min(...arr);
    var minLastIndex = arr.lastIndexOf(minValue);
    obj = {minValue, minLastIndex}
    return obj;
}

console.log(smallestEl([1, 4, -2, 11, 8, 1, -2, 3]));


// 5.
// a. Write a function that finds all the elements in a given array less than a given
// element.
// Input: [2, 3, 8, -2, 11, 4], 6
// Output: [2, 3, -2, 4]

function find (array, element){
    var allSmaller = [];
    for(i=0; i<array.length; i++){
        if(array[i] < element){
            allSmaller.push(array[i])  // ekvivaelnt allSmaller += array[i]
        }
    }
    return allSmaller;
}

console.log(find([2, 3, 8, -2, 11, 4], 6));

// b. Write a function that finds all the elements in a given array that start with the “pro”
// substring. The function should be case insensitive.
// Input: [’JavaScript’, ’Programming’, ’fun’, ’product’]
// Output: [’Programming’, ‘product’]

function findPro (array){
    var outputArr = [];
    for(i=0; i<array.length; i++){
        var string = array[i].toLowerCase();  // Convert the current element to lowercase

    
        if(string.startsWith('pro')){    //startsWith() method to check if a given string starts with a specified substring. This method is case-sensitive, so we first convert the string to lowercase to make the search case-insensitive.
            outputArr.push(array[i])
        }
    }
        return outputArr;

    }

console.log(findPro(["JavaScript", "Programming", "fun", "product"]));


// c. Write a function that expects an array and a callback function that filters out
// some of the elements. Use functions defined in a) or b) to test it.


// 6.
// a. Write a list (array) of products you usually buy in the supermarket. Write a price
// and name for each product. For example, {name: ‘apples’, price: 100},
// {name: ‘milk’, price: 80},
// {name:’bananas’, price: 150}

// var productsToBuy = [];
